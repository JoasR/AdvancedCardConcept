:root{
    --background-rgb: 28, 40, 51;
    --blue-rgb: 127, 179, 213;
    --card-primary-rgb: var(--blue-rgb);
}

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    background-color: rgb(var(--background-rgb));
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
}


.screen{
    width: 500px;
    border: 3px solid rgba(var(--card-primary-rgb), 80%);
    aspect-ratio: 10 / 16;
    border-radius: 1rem;
    position: relative;
    overflow: hidden;
    background-color: rgba(var(--card-primary-rgb), 0.15);
    display: flex;
    justify-content: center;
    align-items: center;
}

/* White lines on the top and bottom of the screen */
.screen:after,
.screen:before {
  content: "";
  height: 5px;
  position: absolute;
  z-index: 4;
  left: 50%;
  translate: -50% 0px;
  background-color: white;
}
.screen:before {
    width: 15%;
    top: 0rem;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
}
  .screen:after {
    width: 25%;
    bottom: 0rem;
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
}

@keyframes pan-overlay{
    from {
        background-position: 0% 100%;
    }

    to {
        background-position: 0% 0%;
    }
}

.screen-overlay{
    height: 100%;
    width: 100%;
    background: linear-gradient(
        rgba(var(--card-primary-rgb), 0.15),
        rgb(var(--card-primary-rgb), 0.15) 3px,
        transparent 3px,
        transparent 9px
    );
    background-size: 100% 9px;
    animation: pan-overlay 22s infinite linear;
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: 2;
    /* pan-overlay is the name of the animation. It should correspond to an @keyframes rule that defines the animation's keyframes.

    22s is the duration of the animation, expressed in seconds. In this case, the animation will last for 22 seconds.
    
    infinite specifies the number of times the animation should repeat. In this case, the animation will repeat indefinitely.
    
    linear is the timing function used to define the animation's pacing. It specifies that the animation should progress at a constant speed throughout its duration.pan-overlay is the name of the animation. It should correspond to an @keyframes rule that defines the animation's keyframes.

    22s is the duration of the animation, expressed in seconds. In this case, the animation will last for 22 seconds.
    
    infinite specifies the number of times the animation should repeat. In this case, the animation will repeat indefinitely.
    
    linear is the timing function used to define the animation's pacing. It specifies that the animation should progress at a constant speed throughout its duration. */
}

@keyframes pan-image{
    0% {
        background-position: 36% 42%;
        background-size: 200%;
    }

    20% {
        background-position: 30% 35%;
        background-size: 200%;
    }

    20.001% {
        background-position: 60% 85%;
        background-size: 500%;
    }

    40%{
        background-position: 49% 81%;
        background-size: 500%;
    }
    
    40.001%{
        background-position: 80% 42%;
        background-size: 300%;
    }

    60%{
        background-position: 84% 33%;
        background-size: 300%;
    }

    60.001%{
        background-position: 0% 0%;
        background-size: 300%;
    }

    80%{
        background-position: 15% 4%;
        background-size: 300%;
    }

    80.001%{
        background-position: 80% 10%;
        background-size: 300%;
    }

    100%{
        background-position: 72% 14%;
        background-size: 300%;
    }
}

.screen > .image{
    height: 100%;
    width: 100%;
    background-image: url("https://images.unsplash.com/photo-1515266591878-f93e32bc5937?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80https://images.unsplash.com/photo-1515266591878-f93e32bc5937?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80");
    filter: sepia(100%) hue-rotate(160deg);
    opacity: 0.6;
    animation: pan-image 15s infinite linear;
    position: absolute;
}

.screen > .screen-content{
    height: 95%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    flex-grow: 1;
    gap: 4rem;
    position: relative;
    z-index: 3;
    margin: 1rem;
    padding-bottom: 6rem;
    border: 1px solid rgba(var(--card-primary-rgb), 60%);
    border-radius: 0.6rem;
}

.screen > .screen-content > .screen-icon{
    color: #fff;
    font-size: 4rem;
    text-shadow: 0px 0px 0.5rem white;
}

.screen > .screen-content > .screen-user{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    position: relative;
}

/* Creates the two lines above the screen-user div */
.screen > .screen-content > .screen-user:before,
.screen > .screen-content > .screen-user:after {
  content: "";
  position: absolute;
  top: 0px;
  background-color: rgb(var(--card-primary-rgb));
  border-radius: 1rem;
  box-shadow: 0px 0px 8px 3px rgba(var(--background-rgb), 60%);
}
.screen > .screen-content > .screen-user:before {
    height: 2px;
    width: 50px;
    translate: -20px -1rem;
    opacity: 0.75;
}
.screen > .screen-content > .screen-user:after {
    height: 3px;
    width: 30px;
    translate: 26px calc(-1rem - 0.5px);
}

/* Creates squares next to the the name */
.screen > .screen-content > .screen-user > .name:before,
.screen > .screen-content > .screen-user > .name:after {
  content: "";
  height: 4px;
  width: 4px;
  position: absolute;
  border: 2px solid white;
  border-radius: 1px;
}
.screen > .screen-content > .screen-user > .name:before {
  top: 55%;
  right: -1.5rem;
}
.screen > .screen-content > .screen-user > .name:after {
  top: 45%;
  left: -1.5rem;  
}

.screen > .screen-content > .screen-user > :is(.name, .link){
   font-family: 'Source Code Pro', monospace;
   color: #fff;
   text-align: center;
   text-transform: uppercase;
}

.screen > .screen-content > .screen-user > .name{
    position: relative;
    font-size: 4.25rem;
    font-weight: 400;
}

.screen > .screen-content > .screen-user > .link {  
    opacity: 0.8;
    font-size: 1.5rem;
    text-shadow: 0px 0px 0.5rem white;
    font-weight: 400;
    letter-spacing: 0.3rem;
    text-decoration: none;
}

.screen > .screen-content > .screen-user > .link:is(:hover, :focus) {  
    text-decoration: underline; 
}

@media(max-width: 700px) {
    .screen {
        scale: 0.6;
        margin-bottom: 0rem;
    }
}